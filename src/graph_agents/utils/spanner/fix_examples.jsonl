{"description": "Returning expressions of type GRAPH_ELEMENT is not allowed", "correct_query": "GRAPH FinGraph\nMATCH (n:Account)\nRETURN TO_JSON(n) AS n;", "bad_query": "GRAPH FinGraph\nMATCH (n:Account)\nRETURN n;", "schema": ""}
{"description": "WHERE clause cannot be used together with property specification", "correct_query": "GRAPH FinGraph\nMATCH (n:Account {id: 1})\nWHERE n.is_blocked\nRETURN n.id;", "bad_query": "GRAPH FinGraph\nMATCH (n:Account {id: 1} WHERE n.is_blocked)\nRETURN n.id;", "schema": ""}
{"description": "Name 'account_id', defined in the previous statement, can only be referenced in the outermost WHERE clause of MATCH", "correct_query": "GRAPH FinGraph\nLET account_id = 1\nMATCH (n:Account)\nWHERE n.id = account_id\nRETURN n.id;", "bad_query": "GRAPH FinGraph\nLET account_id = 1\nMATCH (n:Account {id: account_id})\nRETURN n.id;", "schema": ""}
{"description": "The name account is already defined; redefining graph element variables in a subquery is not allowed. To refer to the same graph element, use a different name and add an explicit filter that checks for equality.", "correct_query": "GRAPH FinGraph\nMATCH (account:Account)\nRETURN account.id AS account_id, VALUE {\n  MATCH (a:Account)-[transfer:Transfers]->(:Account)\n  WHERE a = account\n  RETURN SUM(transfer.amount) AS total_transfer\n} AS total_transfer;", "bad_query": "GRAPH FinGraph\nMATCH (account:Account)\nRETURN account.id AS account_id, VALUE {\n  MATCH (account:Account)-[transfer:Transfers]->(:Account)\n  RETURN SUM(transfer.amount) AS total_transfer\n} AS total_transfer;", "schema": ""}
